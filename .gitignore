# See https://help.github.com/articles/ignoring-files/ for more about ignoring files.

# dependencies
/node_modules
/.pnp
.pnp.*
.yarn/*
!.yarn/patches
!.yarn/plugins
!.yarn/releases
!.yarn/versions

# testing
/coverage

# next.js
/.next/
/out/

# production
/build

# misc
.DS_Store
*.pem

# debug
npm-debug.log*
yarn-debug.log*
yarn-error.log*
.pnpm-debug.log*

# env files (can opt-in for committing if needed)
.env*

# vercel
.vercel

# typescript
*.tsbuildinfo
next-env.d.ts

# See https://help.github.com/articles/ignoring-files/ for more about ignoring files.

# dependencies
/node_modules
/.pnp
.pnp.*
.yarn/*
!.yarn/patches
!.yarn/plugins
!.yarn/releases
!.yarn/versions

# testing
/coverage
/junit.xml
/coverage-final.json
/nyc_output/

# next.js
/.next/
.next/cache  # Исключаем кеш для ускорения локальной разработки
/out/
.next/standalone  # Если используешь standalone-билд

# production
/build
/dist

# misc
.DS_Store
*.pem
Thumbs.db  # Файл кэша на Windows
*.log
*.swp  # Vim swap files
*.swo  # Vim swap files

# debug
npm-debug.log*
yarn-debug.log*
yarn-error.log*
.pnpm-debug.log*
.vscode/**  # Игнорируем настройки локального VS Code, кроме полезных файлов
!.vscode/settings.json
!.vscode/extensions.json

# env files (can opt-in for committing if needed)
.env*
!.env.example  # Оставляем пример env-файла

# vercel
.vercel
.vercel/output.log

# typescript
*.tsbuildinfo
next-env.d.ts

# TailwindCSS
tailwind.config.js
tailwind.config.cjs
tailwind.config.mjs
tailwind.config.ts
postcss.config.js

# Editor directories and files
.idea/
*.iml
*.sublime-workspace
*.sublime-project

# macOS system files
._*
